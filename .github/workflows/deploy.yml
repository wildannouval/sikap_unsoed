# Nama workflow yang akan tampil di tab Actions GitHub
name: Deploy SIKAP Application to VPS

# Pemicu: Jalankan workflow ini setiap kali ada 'push' ke branch 'main'
on:
  push:
    branches: [ main ]

# Daftar pekerjaan yang akan dijalankan
jobs:
  deploy:
    # Menggunakan server virtual Ubuntu terbaru dari GitHub untuk menjalankan proses
    runs-on: ubuntu-latest

    # Langkah-langkah yang akan dieksekusi secara berurutan
    steps:
    # 1. Mengambil kode dari repository Anda
    - name: 1. Checkout Code from Repository
      uses: actions/checkout@v4

    # 2. Setup PHP dengan versi dan ekstensi yang benar
    - name: 2. Setup PHP Environment
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, curl, dom, zip, gd, mysql
        tools: composer
      
    # 3. Setup Node.js untuk build aset frontend
    - name: 3. Setup Node.js Environment
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm' # Mengaktifkan cache untuk instalasi npm yang lebih cepat di proses selanjutnya

    # 4. Install semua dependensi
    - name: 4. Install Application Dependencies
      run: |
        composer install --no-dev --prefer-dist --optimize-autoloader
        npm install
        npm run build

    # 5. Deploy ke Server VPS Anda menggunakan SSH
    - name: 5. Deploy to Production Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          # Pindah ke direktori aplikasi di server
          cd /var/www/sikap
          
          # Aktifkan maintenance mode
          sudo php artisan down
          
          # Tarik kode terbaru dari branch main
          sudo git pull origin main
          
          # Instal ulang dependensi composer untuk memastikan sinkron
          sudo composer install --no-dev --optimize-autoloader
          
          # Jalankan migrasi database jika ada
          sudo php artisan migrate --force
          
          # Hapus cache lama dan buat cache baru untuk produksi
          sudo php artisan optimize:clear
          sudo php artisan config:cache
          sudo php artisan route:cache
          sudo php artisan view:cache
          
          # Nonaktifkan maintenance mode, aplikasi kembali online
          sudo php artisan up
